package code.lib

import net.liftweb.http.Req

object PamfletUrl {

  type PamfletPage = String
  type HtmlSectionName = String

  val redirect = Map[PamfletPage, HtmlSectionName](
    "About this text.html" -> "#_about_this_text",
    "Install and Running.html" -> "#_install_and_running",
    "Downloading and running Lift.html" -> "#_downloading_and_running_lift",
    "Developing using a text editor.html" -> "#texteditor",
    "Developing using Eclipse.html" -> "#eclipse",
    "Viewing the lift_proto H2 database.html" -> "#_viewing_the_lift_proto_h2_database",
    "Using the latest Lift build.html" -> "#snapshot",
    "Using a new version of Scala.html" -> "#_using_a_new_version_of_scala",
    "HTML.html" -> "#_html",
    "Testing and debugging CSS selectors.html" -> "#_testing_and_debugging_css_selectors",
    "Sequencing CSS selector operations.html" -> "#_sequencing_css_selector_operations",
    "Setting meta tag contents.html" -> "#_setting_meta_tag_contents",
    "Setting the page title.html" -> "#_setting_the_page_title",
    "Including HTML5 Shiv.html" -> "#_including_html5_shiv",
    "Adding a Google +1 button.html" -> "removed.html",
    "Returning snippet markup unchanged.html" -> "#_returning_snippet_markup_unchanged",
    "Snippet not found when using HTML5.html" -> "#SnippetNotFound",
    "Avoiding CSS and JavaScript caching.html" -> "#_avoiding_css_and_javascript_caching",
    "Adding to the head of a page.html" -> "#_adding_to_the_head_of_a_page",
    "Custom 404 page.html" -> "#_custom_404_page",
    "Other custom status pages.html" -> "#_other_custom_status_pages",
    "Links in notices.html" -> "#_links_in_notices",
    "Rendering Textile markup.html" -> "#_rendering_textile_markup",
    "Access restriction by HTTP header.html" -> "#_access_restriction_by_http_header",
    "Forms processing in Lift.html" -> "#_forms_processing_in_lift",
    "Plain old form processing.html" -> "#_plain_old_form_processing",
    "Ajax form processing.html" -> "#_ajax_form_processing",
    "Ajax JSON form processing.html" -> "#_ajax_json_form_processing",
    "Conditionally disable a checkbox.html" -> "#_conditionally_disable_a_checkbox",
    "Use a select box with multiple options.html" -> "#_use_a_select_box_with_multiple_options",
    "REST.html" -> "#_rest",
    "DRY URLs.html" -> "#_dry_urls",
    "Google Sitemap.html" -> "#_google_sitemap",
    "Missing file suffix.html" -> "#_missing_file_suffix",
    "Failing to match on a file suffix.html" -> "#_failing_to_match_on_a_file_suffix",
    "Accept binary data in a REST service.html" -> "#RestBinaryData",
    "Returning JSON.html" -> "#_returning_json",
    "Javascript, Ajax, Comet.html" -> "#_javascript_ajax_comet",
    "Trigger server-side code from a button press.html" -> "#_trigger_server_side_code_from_a_button_press",
    "Set up client-side actions from your Scala code.html" -> "#_set_up_client_side_actions_from_your_scala_code",
    "Focus on a field on page load.html" -> "#_focus_on_a_field_on_page_load",
    "Add CSS class to an Ajax Form.html" -> "#_add_css_class_to_an_ajax_form",
    "Show a template inside a page dynamically.html" -> "#_show_a_template_inside_a_page_dynamically",
    "Pipeline.html" -> "#_pipeline",
    "Streaming content.html" -> "#_streaming_content",
    "Serving a file with access control.html" -> "#_serving_a_file_with_access_control",
    "Debugging a request.html" -> "#_debugging_a_request",
    "Running code when sessions are created (or destroyed).html" -> "#OnSession",
    "Run code when Lift shutsdown.html" -> "#ShutdownHooks",
    "Running stateless.html" -> "#RunningStateless",
    "Catch any exception.html" -> "#CatchException",
    "Accessing HttpServletRequest.html" -> "#HttpServletRequest",
    "Secure requests only.html" -> "#_secure_requests_only",
    "Relational database persistence with Record and Squeryl.html" -> "#Squeryl",
    "Using a JNDI datasource.html" -> "#SquerylJNDI",
    "Adding validation to a field.html" -> "#FieldValidation",
    "Implementing custom validation logic.html" -> "#CustomValidation",
    "Modify a field value before it is set.html" -> "#_modify_a_field_value_before_it_is_set",
    "Put a random value in a column.html" -> "#_put_a_random_value_in_a_column",
    "Automatic created and updated timestamps for a Squeryl Record.html" -> "#_automatic_created_and_updated_timestamps_for_a_squeryl_record",
    "Logging SQL.html" -> "#_logging_sql",
    "Model a column with MySQL MEDIUMTEXT.html" -> "#_model_a_column_with_mysql_mediumtext",
    "Relational database persistence with Mapper.html" -> "#_relational_database_persistence_with_mapper",
    "Sequence numbers and existing data.html" -> "#_sequence_numbers_and_existing_data",
    "Detect if the schema has changed.html" -> "#_detect_if_the_schema_has_changed",
    "MongoDB persistence with Record.html" -> "#_mongodb_persistence_with_record",
    "Connecting to a Mongo database.html" -> "#ConnectingToMongo",
    "Storing a hash in a Mongo record.html" -> "#MongoHashMap",
    "Embedding a document inside a Mongo record.html" -> "#MongoEmbedding",
    "Linking between Mongo records.html" -> "#_linking_between_mongo_records",
    "Storing geospatial values.html" -> "#MongoGeospatial",
    "In and Around Lift.html" -> "#_in_and_around_lift",
    "Sending plain text email.html" -> "#_sending_plain_text_email",
    "Sending HTML email.html" -> "#_sending_html_email",
    "Sending authenticated email.html" -> "#_sending_authenticated_email",
    "Sending email with attachments.html" -> "#_sending_email_with_attachments",
    "Logging email rather than sending.html" -> "#_logging_email_rather_than_sending",
    "Run a task later.html" -> "#_run_a_task_later",
    "Run tasks periodically.html" -> "#RunTasksPeriodically",
    "Fetching URLs.html" -> "#_fetching_urls",
    "Production deployment.html" -> "#deployment",
    "Deploying to CloudBees.html" -> "#_deploying_to_cloudbees",
    "MySQL unicode charset encoding.html" -> "#_mysql_unicode_charset_encoding",
    "Contributing, bug reports & getting help.html" -> "#_contributing_bug_reports_amp_getting_help",
    "How to add a new recipe to this Cookbook.html" -> "#_how_to_add_a_new_recipe_to_this_cookbook",
    "How to report bugs.html" -> "#_how_to_report_bugs"

  )

  def unapply(req: Req): Option[String] = redirect get (req path 0)

}